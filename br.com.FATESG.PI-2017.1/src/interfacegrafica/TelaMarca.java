/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfacegrafica;

import classesdedados.Marca;
import classesdedados.Mensagens;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.MarcaDAO;

/**
 *
 * @author Vicente
 */
public class TelaMarca extends javax.swing.JInternalFrame {

    DefaultTableModel dtm = null;
    Marca objMarca = new Marca();

    /**
     * Creates new form TelaMarcaPesquisa
     */
    public TelaMarca() throws Exception {
        initComponents();
        jTextFieldMarcaCadastrar.requestFocus();
        jTextFieldID.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldMarcaPesquisar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMarcaPesquisa = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldMarcaEditar = new javax.swing.JTextField();
        jButtonMarcaExcluir = new javax.swing.JButton();
        jButtonMarcaAlterar = new javax.swing.JButton();
        jButtonMarcaLimpar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldMarcaCadastrar = new javax.swing.JTextField();
        jButtonMarcaLimpar1 = new javax.swing.JButton();
        jButtonMarcaSalvar = new javax.swing.JButton();
        jButtonBuscarTudo = new javax.swing.JButton();
        jTextFieldID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("MARCAS");

        jTextFieldMarcaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMarcaPesquisarActionPerformed(evt);
            }
        });
        jTextFieldMarcaPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMarcaPesquisarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldMarcaPesquisarKeyTyped(evt);
            }
        });

        jLabel5.setText("PESQUISAR:");

        jTableMarcaPesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Marca"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMarcaPesquisa.setName(""); // NOI18N
        jTableMarcaPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMarcaPesquisaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMarcaPesquisa);
        if (jTableMarcaPesquisa.getColumnModel().getColumnCount() > 0) {
            jTableMarcaPesquisa.getColumnModel().getColumn(0).setResizable(false);
            jTableMarcaPesquisa.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableMarcaPesquisa.getColumnModel().getColumn(1).setResizable(false);
            jTableMarcaPesquisa.getColumnModel().getColumn(1).setPreferredWidth(250);
        }

        jLabel2.setText("Descrição:");

        jButtonMarcaExcluir.setText("EXLUIR");
        jButtonMarcaExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarcaExcluirActionPerformed(evt);
            }
        });

        jButtonMarcaAlterar.setText("ALTERAR");
        jButtonMarcaAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarcaAlterarActionPerformed(evt);
            }
        });

        jButtonMarcaLimpar.setText("LIMPAR");
        jButtonMarcaLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarcaLimparActionPerformed(evt);
            }
        });

        jLabel3.setText("Descrição:");

        jTextFieldMarcaCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMarcaCadastrarKeyReleased(evt);
            }
        });

        jButtonMarcaLimpar1.setText("LIMPAR");
        jButtonMarcaLimpar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarcaLimpar1ActionPerformed(evt);
            }
        });

        jButtonMarcaSalvar.setText("SALVAR");
        jButtonMarcaSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMarcaSalvarActionPerformed(evt);
            }
        });

        jButtonBuscarTudo.setText("BUSCAR TODOS");
        jButtonBuscarTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarTudoActionPerformed(evt);
            }
        });

        jLabel4.setText("ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldMarcaCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonMarcaLimpar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonMarcaSalvar)
                        .addGap(62, 62, 62))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonBuscarTudo)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMarcaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonMarcaExcluir, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMarcaEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonMarcaLimpar)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonMarcaAlterar)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMarcaCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMarcaLimpar1)
                    .addComponent(jButtonMarcaSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMarcaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButtonBuscarTudo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonMarcaExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMarcaEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMarcaAlterar)
                    .addComponent(jButtonMarcaLimpar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldMarcaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMarcaPesquisarActionPerformed

    }//GEN-LAST:event_jTextFieldMarcaPesquisarActionPerformed

    private void jTextFieldMarcaPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMarcaPesquisarKeyReleased
        dtm = (DefaultTableModel) jTableMarcaPesquisa.getModel();

        if (!jTextFieldMarcaPesquisar.getText().equals("")) {
            dtm.setNumRows(0);

            String strId, strDescricao;

            try {
                MarcaDAO dao = new MarcaDAO();
                Object objDAO = dao.recuperar();
                ArrayList<Marca> alMarcas = (ArrayList<Marca>) objDAO;

                String texto = jTextFieldMarcaPesquisar.getText().toUpperCase();
                for (int i = 0; i < alMarcas.size(); i++) {

                    if (alMarcas.get(i).getDescricao().contains(texto.toUpperCase())) {
                        strId = String.valueOf(alMarcas.get(i).getIdMarca());
                        strDescricao = alMarcas.get(i).getDescricao();

                        Object[] dados = {strId, strDescricao};
                        dtm.addRow(dados);
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        } else {
            dtm.setNumRows(0);
        }
    }//GEN-LAST:event_jTextFieldMarcaPesquisarKeyReleased

    private void jTableMarcaPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMarcaPesquisaMouseClicked
        int qtdClicks = evt.getClickCount();
        MarcaDAO dao = new MarcaDAO();

        try {
            Object objDAO = dao.recuperar();
            ArrayList<Marca> alMarcas = (ArrayList<Marca>) objDAO;
            int idx = jTableMarcaPesquisa.getSelectedRow();
            if (qtdClicks == 2) {
                if (jTableMarcaPesquisa.getSelectedRow() >= 0) {
                    dtm = (DefaultTableModel) jTableMarcaPesquisa.getModel();
                    objMarca.setIdMarca(Integer.parseInt(dtm.getValueAt(idx, 0).toString()));
                    for (int i = 0; i < alMarcas.size(); i++) {
                        if (alMarcas.get(i).getIdMarca() == objMarca.getIdMarca()) {
                            objMarca.setDescricao(alMarcas.get(i).getDescricao());
                            jTextFieldMarcaEditar.setText(objMarca.getDescricao());
                            //jTextFieldID.setEnabled(true);
                            jTextFieldID.setText(objMarca.getIdMarca() + "");
                            //jTextFieldID.setEnabled(false);
                            return;
                        }
                    }

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jTableMarcaPesquisaMouseClicked

    private void jButtonMarcaLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarcaLimparActionPerformed
        jTextFieldMarcaEditar.setText("");
    }//GEN-LAST:event_jButtonMarcaLimparActionPerformed

    private void jButtonMarcaLimpar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarcaLimpar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonMarcaLimpar1ActionPerformed

    private void jButtonMarcaSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarcaSalvarActionPerformed
        MarcaDAO dao = new MarcaDAO();
        Marca marca = new Marca();

        try {
            Object objDAO = dao.recuperar();
            ArrayList<Marca> alMarcas = (ArrayList<Marca>) objDAO;
            if (jTextFieldMarcaCadastrar.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Campo obrigatório.");
                jTextFieldMarcaCadastrar.requestFocus();
                return;
            }
            marca.setDescricao(jTextFieldMarcaCadastrar.getText());
            if (alMarcas != null) {
                for (int i = 0; i < alMarcas.size(); i++) {
                    if (marca.getDescricao().toUpperCase().equals(alMarcas.get(i).getDescricao().toUpperCase())) {
                        JOptionPane.showMessageDialog(null, "Cadastro não realizado, marca já cadastrada!");
                        return;
                    }
                }
            }
            Object objMarca = null;
            objMarca = (Object) (marca);
            dao.incluir(objMarca);

            dtm = (DefaultTableModel) jTableMarcaPesquisa.getModel();
            dtm.setNumRows(0);
            String strId, strDescricao;

            objDAO = dao.recuperar();
            alMarcas = (ArrayList<Marca>) objDAO;
            for (int i = 0; i < alMarcas.size(); i++) {
                strId = String.valueOf(alMarcas.get(i).getIdMarca());
                strDescricao = alMarcas.get(i).getDescricao();

                Object[] dados = {strId, strDescricao};
                dtm.addRow(dados);
            }
            jTextFieldMarcaCadastrar.setText("");
            jTextFieldMarcaCadastrar.requestFocus();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Falha ao tentar cadastrar Marca!");
        }
    }//GEN-LAST:event_jButtonMarcaSalvarActionPerformed

    private void jTextFieldMarcaCadastrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMarcaCadastrarKeyReleased
        jTextFieldMarcaCadastrar.setText(jTextFieldMarcaCadastrar.getText().toUpperCase());
    }//GEN-LAST:event_jTextFieldMarcaCadastrarKeyReleased

    private void jButtonBuscarTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarTudoActionPerformed

        try {
            dtm = (DefaultTableModel) jTableMarcaPesquisa.getModel();
            dtm.setNumRows(0);

            String strId, strDescricao;

            ArrayList<Marca> alMarcas = new ArrayList<>();
            MarcaDAO dao = new MarcaDAO();
            Object objDAO = dao.recuperar();

            alMarcas = (ArrayList<Marca>) objDAO;
            if (alMarcas == null) {
                JOptionPane.showMessageDialog(null, "Não há dados!");
                return;
            }

            String texto = jTextFieldMarcaPesquisar.getText().toUpperCase();
            for (int i = 0; i < alMarcas.size(); i++) {

                strId = String.valueOf(alMarcas.get(i).getIdMarca());
                strDescricao = alMarcas.get(i).getDescricao();

                Object[] dados = {strId, strDescricao};
                dtm.addRow(dados);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_jButtonBuscarTudoActionPerformed

    private void jTextFieldMarcaPesquisarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMarcaPesquisarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldMarcaPesquisarKeyTyped

    private void jButtonMarcaAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarcaAlterarActionPerformed
        try {
            MarcaDAO dao = new MarcaDAO();
            if (!jTextFieldMarcaEditar.getText().equals("")) {
                objMarca.setDescricao(jTextFieldMarcaEditar.getText().toUpperCase());
                dao.alterar(objMarca.getIdMarca(), objMarca);

                dtm = (DefaultTableModel) jTableMarcaPesquisa.getModel();
                dtm.setNumRows(0);
                String strId, strDescricao;

                Object objDAO = dao.recuperar();
                ArrayList<Marca> alMarcas = (ArrayList<Marca>) objDAO;
                for (int i = 0; i < alMarcas.size(); i++) {
                    strId = String.valueOf(alMarcas.get(i).getIdMarca());
                    strDescricao = alMarcas.get(i).getDescricao();

                    Object[] dados = {strId, strDescricao};
                    dtm.addRow(dados);
                }
                jTextFieldMarcaCadastrar.setText("");
                jTextFieldMarcaCadastrar.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "Campo obrigatório!");
                jTextFieldMarcaEditar.requestFocus();
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaMarca.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonMarcaAlterarActionPerformed

    private void jButtonMarcaExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMarcaExcluirActionPerformed
        try {
            MarcaDAO dao = new MarcaDAO();

            dtm = (DefaultTableModel) jTableMarcaPesquisa.getModel();

            int idx[] = jTableMarcaPesquisa.getSelectedRows();
            if (jTableMarcaPesquisa.getSelectedRow() >= 0) {
                for (int j = 0; j < idx.length; j++) {
                    dao.excluir(Integer.parseInt(String.valueOf(dtm.getValueAt(idx[j], 0))));
                }

                dtm.setNumRows(0);
                String strId, strDescricao;
                Object objDAO = dao.recuperar();
                ArrayList<Marca> alMarcas = (ArrayList<Marca>) objDAO;
                for (int i = 0; i < alMarcas.size(); i++) {
                    strId = String.valueOf(alMarcas.get(i).getIdMarca());
                    strDescricao = alMarcas.get(i).getDescricao();

                    Object[] dados = {strId, strDescricao};
                    dtm.addRow(dados);
                }
                jTextFieldMarcaCadastrar.setText("");
                jTextFieldMarcaCadastrar.requestFocus();

            } else {
                JOptionPane.showMessageDialog(null, new Mensagens().mensagem("MSG18"));
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButtonMarcaExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscarTudo;
    private javax.swing.JButton jButtonMarcaAlterar;
    private javax.swing.JButton jButtonMarcaExcluir;
    private javax.swing.JButton jButtonMarcaLimpar;
    private javax.swing.JButton jButtonMarcaLimpar1;
    private javax.swing.JButton jButtonMarcaSalvar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMarcaPesquisa;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldMarcaCadastrar;
    private javax.swing.JTextField jTextFieldMarcaEditar;
    private javax.swing.JTextField jTextFieldMarcaPesquisar;
    // End of variables declaration//GEN-END:variables
}
